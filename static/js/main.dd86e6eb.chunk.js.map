{"version":3,"sources":["img/logo.png","img/collaborate.png","img/track.png","components/Location.jsx","components/quote.jsx","components/landingpage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","api_key","Location","state","city","code","componentDidMount","a","fetch","response","json","data","setState","region_code","this","Component","Quote","error","isLoaded","contents","abortController","AbortController","signal","then","res","result","abort","message","className","quotes","quote","author","LandingPage","animateIn","animateOut","href","src","style","width","height","preload","muted","loop","poster","playsInline","webkit-playsinline","autoPlay","collaborate","alt","track","App","logo","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd86e6eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e1e7fe4c.png\";","module.exports = __webpack_public_path__ + \"static/media/collaborate.366949f8.png\";","module.exports = __webpack_public_path__ + \"static/media/track.5ecbf2f9.png\";","import React, { Component } from \"react\";\nconst api_key = \"07b0f171322dd9f1dd16e17644dd2945\";\nclass Location extends Component {\n  state = {\n    city: [],\n    code: []\n  };\n  componentDidMount = async () => {\n    const response = await fetch(\n      `http://api.ipstack.com/check?access_key=${api_key}`\n    );\n    const data = await response.json();\n    this.setState({\n      city: data.city,\n      code: data.region_code\n    });\n  };\n\n  render() {\n    const { city, code } = this.state;\n    return (\n      <p>\n        {city}, {code}\n      </p>\n    );\n  }\n}\n\nexport default Location;\n","import React, { Component } from \"react\";\nimport \"./style/Quote.css\";\nimport Location from \"./Location\";\nclass Quote extends Component {\n  state = {\n    error: null,\n    isLoaded: false,\n    contents: []\n  };\n  abortController = new AbortController();\n  componentDidMount() {\n    fetch(\"http://quotes.rest/qod.json?category=inspire\", {\n      signal: this.abortController.signal\n    })\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            contents: result.contents\n          });\n        },\n\n        error => {\n          this.setState({\n            isLoaded: false,\n            error\n          });\n        }\n      );\n  }\n  componentWillUnmount() {\n    this.abortController.abort();\n  }\n\n  render() {\n    const { error, isLoaded, contents } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"quote-container\">\n          <p>You are in </p>\n          <Location />\n          <h2>Quote of the day</h2>\n          <p>\n            \"{contents.quotes[0].quote}\" - {contents.quotes[0].author}{\" \"}\n          </p>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Quote;\n","import React from \"react\";\nimport \"./style/landingPage.css\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport \"animate.css/animate.min.css\";\n\nimport collaborate from \"../img/collaborate.png\";\nimport track from \"../img/track.png\";\n\nconst LandingPage = () => {\n  return (\n    <div>\n      <hr></hr>\n      <div className=\"container\">\n        <div className=\"leftSide\">\n          <ScrollAnimation animateIn=\"bounceInLeft\" animateOut=\"bounceOutLeft\">\n            <h2>The ultimate team collaboration tool</h2>\n\n            <p>\n              collab.com, ranked #1 for productivity, helps teams manage and\n              execute projects that deliver results on time.\n            </p>\n\n            <a href=\"get-started\" className=\"getStarted\">\n              Get Started\n            </a>\n          </ScrollAnimation>\n        </div>\n\n        <div className=\"rightSide\">\n          <ScrollAnimation\n            animateIn=\"bounceInRight\"\n            animateOut=\"bounceOutRight\"\n          >\n            <video\n              src=\"https://dapulse-res.cloudinary.com/video/upload/f_auto/remote_mondaycom_static/video/main/three-board-views-with-shadow/three-board-views-with-shadow.mp4\"\n              style={{ width: \"60%\", height: \"60%\" }}\n              preload=\"auto\"\n              muted\n              loop=\"1\"\n              poster=\"https://dapulse-res.cloudinary.com/image/upload/f_auto/remote_mondaycom_static/video/main/three-board-views-with-shadow/three-board-views-with-shadow.jpg\"\n              playsInline=\"\"\n              webkit-playsinline=\"\"\n              autoPlay\n              className=\"taskPhoto\"\n            ></video>\n          </ScrollAnimation>\n        </div>\n      </div>\n      <div className=\"container second\">\n        <div className=\"leftSide\">\n          <ScrollAnimation animateIn=\"bounceInLeft\" animateOut=\"bounceOutLeft\">\n            <video\n              src=\"https://dapulse-res.cloudinary.com/video/upload/f_auto/remote_mondaycom_static/video/main/invite-users/invite-users.mp4\"\n              style={{ width: \"70%\", height: \"70%\" }}\n              preload=\"auto\"\n              muted\n              loop\n              poster=\"https://dapulse-res.cloudinary.com/image/upload/f_auto/remote_mondaycom_static/video/main/invite-users/invite-users.png\"\n              playsInline\n              webkit-playsinline=\"\"\n              autoPlay\n            ></video>\n          </ScrollAnimation>\n        </div>\n        <div className=\"rightSide\">\n          <ScrollAnimation\n            animateIn=\"bounceInRight\"\n            animateOut=\"bounceOutRight\"\n          >\n            <span>Plan</span>\n            <h2>Visually map out everything</h2>\n            <p>\n              Planning projects is easier when you can organize your team's\n              tasks in a visual way. Create customizable workflows, see whoâ€™s\n              working on what, assign teammates to new tasks, set due dates, and\n              prioritize with color-coded labels.\n            </p>\n          </ScrollAnimation>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"leftSide\">\n          <ScrollAnimation animateIn=\"bounceInLeft\" animateOut=\"bounceOutLeft\">\n            <h2>Work together more efficeintly</h2>\n            <span>\n              <p>Collaborate</p>\n            </span>\n            <p>\n              Collaborate directly in the context of any project with a\n              designated space for real-time communication. Share files,\n              comments and feedback in one central place, mentioning all\n              relevant teammates with automatic notifications on every update.\n            </p>\n          </ScrollAnimation>\n        </div>\n        <div className=\"rightSide\">\n          <ScrollAnimation\n            animateIn=\"bounceInRight\"\n            animateOut=\"bounceOutRight\"\n          >\n            <img src={collaborate} alt=\"taskPhotos\" className=\"taskPhoto\" />\n          </ScrollAnimation>\n        </div>\n      </div>\n      <div className=\"container second\">\n        <div className=\"leftSide\">\n          <ScrollAnimation animateIn=\"bounceInLeft\" animateOut=\"bounceOutLeft\">\n            <img\n              src={track}\n              alt=\"plan\"\n              style={{ width: \"50%\", height: \"50%\" }}\n            />\n          </ScrollAnimation>\n        </div>\n        <div className=\"rightSide\">\n          <ScrollAnimation\n            animateIn=\"bounceInRight\"\n            animateOut=\"bounceOutRight\"\n          >\n            <span>Track</span>\n            <h2>Keep an eye on progress, your way</h2>\n            <p>\n              Zoom in on the nitty-gritty details or zoom out and see the big\n              picture. You decide on the way you want to track your team's\n              progress. Enjoy high-level dashboards and multiple view options,\n              from Calendar and Timeline to Gantt and Pie charts\n            </p>\n          </ScrollAnimation>\n        </div>\n      </div>\n      <footer className=\"contain\">\n        <div className=\"allrights\">\n          <p>All Rights Reserved</p>\n          <p>&copy;collab.com 2019</p>\n        </div>\n        <div className=\"products\">\n          <h4>Our Products</h4>\n          <a href=\"products\">Product</a>\n          <a href=\"stories\">Stories</a>\n          <a href=\"pricing\">Pricing</a>\n          <a href=\"enterprise\">Enterprise</a>\n          <a href=\"affiliates\">Partners/Affiliates</a>\n          <a href=\"find\">Find a Partner</a>\n          <a href=\"templates\">Templates</a>\n          <a href=\"integrations\">Integrations</a>\n          <a href=\"developers\">Developers</a>\n          <a href=\"students\">Students</a>\n        </div>\n        <div className=\"team\">\n          <h4>Our team</h4>\n          <a href=\"about\">About Us</a>\n          <a href=\"contact\">Contact Us</a>\n          <a href=\"career\">Careers</a>\n          <a href=\"news\">In The News</a>\n          <a href=\"press\">Press Kit</a>\n          <a href=\"blog\">Blog</a>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import React from \"react\";\nimport \"./App.css\";\nimport logo from \"./img/logo.png\";\nimport Quote from \"./components/quote\";\nimport LandingPage from \"./components/landingpage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h4 className=\"name\">collab.com</h4>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1> Team Work</h1>\n      </header>\n      <Quote />\n      <LandingPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}